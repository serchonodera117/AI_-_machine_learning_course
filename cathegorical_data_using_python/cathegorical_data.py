# -*- coding: utf-8 -*-
"""cathegorical_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f4D6M8jm4-VHf0XoiqKJNhq5wh0jDX9j
"""

#Why and how to code ordinary cathegorical data by using python with sklearn and panda
#Context is to work with data from a survey
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import MinMaxScaler

#ordinal codificator
from sklearn.preprocessing import OrdinalEncoder

#codificator OneHotEncoder
from sklearn.preprocessing import OneHotEncoder

cathegorical_service = ["Muy insatisfecho", "Insatisfecho", "Neutral", "Satisfecho", "Muy satisfecho"]
cahtegorical_quality = ["Mala", "Buena", "Muy buena", "Excelente"]

survey = {"service" : ["Muy insatisfecho", "Insatisfecho",
                       "Neutral", "Satisfecho", "Muy satisfecho",
                       "Muy satisfecho"],
          "food": ["Mala", "Buena", "Muy buena",
                   "Excelente", "Mala", "Buena"]
          }

#sporadic customer  frecuent customer
client_type = [0,0,1,1,0,1]

pd.DataFrame(survey)

data_ord= pd.DataFrame(survey)
codificator = OrdinalEncoder (categories = [cathegorical_service, cahtegorical_quality])

data_ord = pd.DataFrame(codificator.fit_transform(data_ord),
                        columns=["service", "food"])
print(data_ord)
print(codificator.categories_)

data_one = pd.DataFrame(survey)
codificator = OneHotEncoder()

print(codificator.fit_transform(data_one).toarray())

#union between two dataframes to link survey data to clasification dataframe
#print(np.concatenate(codificator.categories_))

data_one = pd.DataFrame(codificator.fit_transform(data_one).toarray(),
                        columns=np.concatenate(codificator.categories_))

data_one

#logistic regresuin clasifier
print("\n*** sacalung data to ordinal codification")
scaler = MinMaxScaler()

print(data_ord)
data_ord = scaler.fit_transform(data_ord)
print(data_ord)

print("\n*** Clasification with coded data into Ordinal Encoder")
model = LogisticRegression().fit(data_ord, client_type)

print("Preduction", model.predict(data_ord))
print("Correct classes", client_type)
print(model.predict_proba(data_ord))

print("\n*** clasification by coded data with OneHotEncoder")
model = LogisticRegression().fit(data_one, client_type)

print("Preduction", model.predict(data_ord))
print("Correct classes", client_type)
print(model.predict_proba(data_ord))